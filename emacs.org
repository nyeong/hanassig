#+title: Emacs
#+description: emacs 한 번 써보자
#+author: An Nyeong

* 왜

요즘 세상에 emacs를 굳이 새로 배우려 하는 사람은 거의 없을 것 같다. 모르긴 하지만.
vim vs emacs 같은 논쟁도 이제 옛말이다.
그런 거 고민할 시간에 VS Code를 깔고 업무 끝내고 점심 메뉴 고민하는 게 생산적이다.

그럼에도 emacs를 써보고 싶었다. 얼마나 오래 쓸 지는 모르지만 시도는 해보고 싶다.

1. org-mode를 써보고 싶었다.

   얼마나 좋길래 이거 쓰려고 emacs 쓴다는 사람들이 그렇게 많을까? 궁금했다.

2. doom emacs, evil-mode 덕에 문턱이 낮아졌다.

   필요한 패키지는 Doom Emacs가 미리 깔아주고, 단축기는 vim에서 쓰던 대로 쓰면 된다.

3. emacs를 써보고 싶었다.

   emacs repo를 받아 ~git log --reverse~ 를 때리면 85년도의 커밋이 나온다. 리처드 스톨만의 커밋도 나온다.
   오픈소스로서 40년 동안 사랑받고 관리되는 에디터는 어떤 모습일지 궁금했다.

4. vim 말고도 모달 커스텀이 있다.

   neovim이 lua를 등에 업고 아무리 날고 기어도 vim에서 정의한 모드를 벗어나려는 모습은 보지 못하였다.
   meow, kakoune 등 새로운 모달 에디팅을 시도하는 모습이 인상적이었다.
   당장 쓸일은 없지만 된다는 것이 호인상이었다.

5. elisp을 써보고 싶었다.

   neovim 스크립트 언어인 루아는, 같은 프로토타입 언어인 자바스크립트를 써봤음에도 친해지기가 힘들었다.
   elisp은 어떨까?

그래서 개인적인 목적에 먼저 써보려고 한다.

* Doom Emacs

예전에 vim을 쓸 때에는 내가 모르는 기능과 키맵이 깔리는 것이 싫어서 직접 config를 작성했다. 예전에는 에디터에 대한 요구사항이 적어서 그래도 큰 불편함이 없었다.

요즘에는 에디터로 많은 작업을 하려니 세팅해야하는 것이 많다. 하다보면 실제 작업은 뒷전이고 하루종일 세팅만 하게 되더라. 그냥 스타터 패키지 깔고 편해지기로 하였다.

doom emacs는 제공되는 패키지를 쉽게 활성화/비활성화 할 수 있는데,
이게 일종의 큐레이션 역할도 해서 좋다. 해결할 수 있단 걸 모르면 그냥 불편한대로 살기 마련이다.

emacs 프리셋 중에서는 spacemacs와 doom emacs가 양대강자인 것 같다.
doom emacs를 먼저 발견해서 그냥 doom 깔았다. 둘 다 유명하고 잘 관리되고 있어서 고민하는 것보다 써보고 경험하는 편이 낫다고 판단했다.

* 편집

evil-mode를 켜니 실제 편집경험은 아직까진('24. 06. 11.) vim과 큰 차이가 없다. vim에서 하던대로 하면 된다.

* org-mode

Emacs를 써보려고 하는 가장 큰 이유.

** 참고자료

- [[https://orgmode.org/worg/]] : org-mode 커뮤니티 문서

  웹사이트로 봐도 되고, 저장소를 git으로 내려받아 로컬에서 봐도 된다.

- [[./org-mode-cheatsheet.org]] : 치트시트 정리
