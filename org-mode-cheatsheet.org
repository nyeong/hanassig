#+title: org-mode 치트시트
#+description: evil-mode에서의 org-mode 단축키
#+author: An Nyeong

Doom Emacs + evil-mode에서의 org-mode 치트시트

* 단축키
** 이동

| 키               | 동작                           |
|------------------+--------------------------------|
| gh               | 부모 요소로 이동               |
| gj               | (같은 위계의) 다음 요소로 이동 |
| gk               | (같은 위계의) 이전 요소로 이동 |
| M-위/아래 방향키 | 현재 줄을 들고 위/아래로 이동  |

** 헤딩

헤딩 위에 커서를 놓고

| 키                   | 동작                     |
|----------------------+--------------------------|
| <tab> 혹은 z a       | 접기/펴기                |
| z A                  | 모두 접기/같은 위계 펴기 |
| M-왼쪽/오른쪽 방향키 | 위계 증가/감소           |

~TAB~ 과 ~S-TAB~ 은 동작이 조금 다르다.

[[https://orgmode.org/guide/Visibility-Cycling.html]] 참고

** 테이블

| 키                   | 동작                          |
|----------------------+-------------------------------|
| (                    | 이전 셀                       |
| )                    | 다음 셀                       |
| {                    | 테이블 시작                   |
| }                    | 테이블 끝                     |
| M-왼쪽/오른쪽 방향키 | 현재 컬럼을 들고 좌/우로 이동 |
| cie                  | 셀 내부 편집                  |
| ciE                  | 행 편집                       |

* 문법

** 인라인 요소

- ~*굵게*~ : *굵게*
- ~/기울여서/~ : /기울여서/
- ~_밑줄_~ : _밑줄_
- ~=그대로=~ : =그대로=
- ~~코드~~ : ~코드~
- ~$\sqrt{b}$~ : $\sqrt{b}$

** 블록 요소

*** 예시

#+BEGIN_EXAMPLE
예시 블록
#+END_EXAMPLE

: 간단한 예시

#+BEGIN_src rust
fn main() {
  let x = String::from("hi");
}
#+END_SRC

*** 리스트

**** 순서 있는 리스트

1. 하나
2. 둘

**** 순서 없는 리스트

- 하나
- 둘

**** 설명 리스트

- Keyword A :: Explain
- Keyword B :: Explain

*** 테이블

org-mode에서 제일 강력한 기능이지 않을까? 재정렬은 물론이고 계산도 해준다.

#+BEGIN_SRC org
|Name|Phone|Age|
|-<TAB>
#+END_SRC
